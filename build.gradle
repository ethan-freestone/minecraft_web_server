plugins {
    id 'groovy'
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'application'
}

version '0.1'
group 'web_server'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    compileOnly(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    runtime "io.micronaut:micronaut-core:$micronautVersion"
    compileOnly("io.micronaut:micronaut-inject-groovy:$micronautVersion")

    implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
    implementation('io.micronaut:micronaut-inject')
    implementation('io.micronaut.groovy:micronaut-runtime-groovy')

    implementation('javax.annotation:javax.annotation-api')

    runtimeOnly('ch.qos.logback:logback-classic')
    runtimeOnly("com.h2database:h2")
    runtimeOnly("org.apache.tomcat:tomcat-jdbc")
    testImplementation(enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion"))
    testImplementation('io.micronaut:micronaut-inject-groovy')
    testImplementation('org.spockframework:spock-core') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }

    testImplementation('io.micronaut.test:micronaut-test-spock')

    compile group: 'io.micronaut', name: 'micronaut-http-client', version: "$micronautVersion"
    runtime group: 'io.micronaut', name: 'micronaut-http-server-netty', version: "$micronautVersion"
    compile group: 'io.micronaut', name: 'micronaut-http', version: "$micronautVersion"

    // Gorm
    implementation("io.micronaut.groovy:micronaut-hibernate-gorm")
    compile "org.grails:grails-datastore-gorm-hibernate5"

    // Validation
    compile "io.micronaut:micronaut-validation:$micronautVersion"

    // Discovery + event handling
    compile 'io.micronaut:micronaut-discovery-client:2.0.1'

    // GSON
    compile 'com.google.code.gson:gson:2.8.6'
}
test.classpath += configurations.developmentOnly

mainClassName = 'web_server.Application'

// use JUnit 5 platform
test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.toVersion('11')
    targetCompatibility = JavaVersion.toVersion('11')
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
    if (gradle.startParameter.continuous) {
        systemProperties(
            'micronaut.io.watch.restart':'true',
            'micronaut.io.watch.enabled':'true',
            'micronaut.io.watch.paths':'src/main'
        )
    }
}